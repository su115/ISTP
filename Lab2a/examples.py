#! /bin/python3
#щоб скрипт запускався з консолі

print('\n','-'*20)
print(' '*9,'I')
# I. Виведіть вбудовані константи, (2-3 на вибір):
print(True,False,None) #Вбудовані константи в python3


print('\n','-'*20)
# II.Виведіть результат роботи вбудованих функцій (2-3 на вибір), наприклад:
print(' '*9,'II')

l1='1234567890'
l2=['1',2,'three',[4,5]]    #Вхідні дані
print(abs(-12))             #Модуль числа -12
print(str((int(l1)+10)))    #строка переводиться в число, відбувається додавання а потім отримане число переводиться назад в строку
print(len(l2))  #довжина списка l2


print('\n','-'*20)
print(' '*9,'III')
#Познайомтесь з циклами та розгалуженнями. Напишіть будь-який код який демонструє роботу циклу або розгалужень, (2-3 на вибір)

#малює прямокутник
for i in range(10):
    for j in range(10):
        if i==0 or i == 9 or j==0 or j==9:
            print('#',end='')
            continue
        print(' ',end='')
    print('\n', end='')


print('\n','-'*20)
print(' '*9,'IV')
#Конструкція try->except->finally. У мові Python код не компілюється, а виконується відразу. Можливі помилки нам треба виловлювати самим. Напишіть свій варіант коду з помилкою.
a=[1,2,3]
try:
    if len(a)==3:
        raise Exception('Виключення!')
except Exception as e:
    print(e)
finally:
    print('4 елементу у списку немає.')
# Код кидає і ловить виключення 
# блок finally  завжди буде виконуватися незалежно чи виникло виключення
print('\n','-'*20)
#Контекст-менеджер with. Можете почитати тут. Напишіть свій код з контекст-менеджером
print(' '*9,'V')

import sys
with open(sys.argv[0]) as f:
    print(f.read(15))

#код читає перші 15 байт цього файлу
#в sys.argv аргументи з якими запускався цей файл
#ім'я файлу є нульовим аргументом
#Завдяки with файл закриється сам
print('\n','-'*20)
print(' '*9,'VI')
#Познайомтесь з Python lambdas. Напишіть свій приклад коду та як Ви розумієте Лямбди

sum=lambda x,y: x+y
print('sum: 1 + 4 =',sum(1,4),'\nsum: first + secound =',sum('first','secound'))
#lambda функція - анонімнa функція.
print('\n','-'*20)
